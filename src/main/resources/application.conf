platform5 {

  printing {
    enabled = true //печать вкл./выкл.
    page {
      orientation = "portrait"
    }

    devices {
      1 = "Microsoft Print to PDF" //имя принтера для печати, взять из лога при запуске
      2 = ""
      3 = ""
    }
  }

  //настройка подключения к основному серверу platform5
  server.remote {
    enabled = true
    system = "platform5-system"
    webSocketPort = 8081
    //здесь поменять на адрес сервера
    host = "127.0.0.1"
    //порт админки
    httpPort = 8000
  }

  terminal {

    accessControlEnabled = false //сканер вкл./выкл.

    //параметры терминала для печати и кд
    autoLogin {
      enabled = true
      username = "admin"
      password = "admin"
      terminal = "WEB"
      monitors = [
        { name = "Monitor1", position = "0" }
      ]
    }

    config {
      //список ком портов для подключения сканеров
      devices = [{
        enabled = true
        name = "emulator"
        driverType = "emulator"
        parameters = {
          delay = 5000
          data = "496"
        }
      },
        {
          enabled = false
          name = "serialScanner"
          driverType = "serialport"
          parameters {
            port = "COM4"
            speed = 9600
          }
        },
        //считыватель UHF rfid меток RRU9890
        {
          enabled = false
          name = "rfid9809"
          driverType = "rfid9809"
          parameters {
            port = 5
            delay = 100 //интервал опроса карт, мс
            writeTimeout = 1000 //таймаут записси EPC, мс
          }
        },
        //Omnikey
        {
          enabled = false
          name = "omnikey"
          driverType = "omnikey"
          parameters {
            delay = 300
            portName = "OMNIKEY CardMan 5x21-CL 0"
          }
        },
      ]

      //формат обраотки данных сканера
      formats = [{
        name = "testFormat"
        driverType = "plain",
        parameters = {
          regexp: "[0-9]{10,10}([0-9]{14,14})[0-9]+$"
        }
      },
        {
          name = "plainFormat"
          driverType = "plain",
          parameters = {
          }
        }
      ]

      //тип реакции на сканирование
      //      "redirect" ⇒ открыть анкету в админке(только при коннекте админки к терминалу)
      //      "print" ⇒ печать
      //      "check_badge" ⇒ контроль доступа
      //      "assign_barcode" ⇒ назначить рфид
      //      "open_and_assign" => открыть анкету и назначить рфид
      reactions = [{
        name = "Redirect"
        type = "redirect"
        parameters = {
          badgeTypeId = 2
        }
      },
        {
          name = "AssignBarcode"
          type = "assign_barcode"
          parameters = {
          }
        },
        {
          name = "CheckBadge"
          type = "check_badge"
          parameters = {
          }
        },
        {
          name = "OpenAndAssign"
          type = "open_and_assign"
          parameters = {
          }
        }
      ]

      //конфигурация сканеров
      scanners = [
        {
          name = "test1"
          device = "emulator" //имя из списка devices
          format = "testFormat" // формат из списка formats
          reaction = "Redirect" // реакция из списка reactions
          //дополнительные параметры
          parameters = {
            dataField = "72" //ид поля для поиска
            formId = "2"
            formList = ["49", "60"] //ид формы: ид поля
            badgeSearch = false //поиск по бейджу
          }
        },
        {
          name = "RFIDWriter"
          device = "rfid9809"
          format = "plainFormat" // формат из списка formats
          reaction = "AssignBarcode" // реакция из списка reactions

          //дополнительные параметры
          parameters = {
            dataField = "1" //ид поля для записи TID
            formId = "1" //ид формы
            badgeSearch = true //поиск по бейджу
            formList = ["49", "60"] //список ид полей, по всем формам
          }
        },
        {
          name = "Omnikey"
          device = "omnikey"
          format = "plainFormat" // формат из списка formats
          reaction = "AssignBarcode" // реакция из списка reactions

          //дополнительные параметры
          parameters = {
            dataField = "1" //ид поля для записи TID
            formId = "1" //ид формы
            badgeSearch = false //поиск по бейджу

          }
        }
      ]
    }
  }
}

akka.actor {
  warn-about-java-serializer-usage = true

  serializers {
    kryo = "com.twitter.chill.akka.AkkaSerializer"
  }

  serialization-bindings {
    "sevts.remote.protocol.package$Protocol" = kryo
  }
}

akka.http {

  host-connection-pool.client.idle-timeout = infinite
  server {
    idle-timeout = 3600 s
    remote-address-header = on
  }
  host-connection-pool.idle-timeout = 3600 s
  client.parsing.max-content-length = 30000000
  parsing {
    # The limits for the various parts of the HTTP message parser.
    max-uri-length = 2k
    max-method-length = 16
    max-response-reason-length = 64
    max-header-name-length = 64
    max-header-value-length = 8k
    max-header-count = 64
    max-content-length = 8m
    max-chunk-ext-length = 256
    max-chunk-size = 50m
  }
}

blocking-dispatcher {
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min    = 2
    core-pool-size-max    = 16
  }
}

