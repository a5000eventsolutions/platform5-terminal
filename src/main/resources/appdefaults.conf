akka.actor {
  warn-about-java-serializer-usage = true

  serializers {
      java = "akka.serialization.JavaSerializer"
          # Define kryo serializer
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
  }

  serialization-bindings {
    "sevts.remote.protocol.package$Protocol" = kryo
    "sevts.server.events.transport.package$SendTask" = kryo
    "sevts.server.events.package$SystemEvent" = kryo
    "sevts.remote.microservice.package$ServiceProtocol" = kryo
    "sevts.server.notifications.package$MailNotification" = kryo
  }

  allow-java-serialization = off
}

akka.http {

  host-connection-pool.client.idle-timeout = infinite
  server {
    idle-timeout = 3600 s
    remote-address-header = on
  }
  host-connection-pool.idle-timeout = 3600 s
  client.parsing.max-content-length = 30000000
  parsing {
    # The limits for the various parts of the HTTP message parser.
    max-uri-length = 2k
    max-method-length = 16
    max-response-reason-length = 64
    max-header-name-length = 64
    max-header-value-length = 8k
    max-header-count = 64
    max-content-length = 8m
    max-chunk-ext-length = 256
    max-chunk-size = 50m
  }
}

blocking-dispatcher {
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min    = 2
    core-pool-size-max    = 16
  }
}

organizationId = "1"